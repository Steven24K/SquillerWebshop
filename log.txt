An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].Name asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].Name asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."Name", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."Name"Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."Name"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
where bool string [product].Name.ToLower().Contains(__keyword_0) || bool string [product].Description.ToLower().Contains(__keyword_1)
order by [product].Name asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
where bool string [product].Name.ToLower().Contains(__keyword_0) || bool string [product].Description.ToLower().Contains(__keyword_1)
order by [product].Name asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                WHERE ((instr(lower("product"."Name"), @__keyword_0) > 0) OR (@__keyword_0 = '')) OR ((instr(lower("product"."Description"), @__keyword_1) > 0) OR (@__keyword_1 = ''))
                ORDER BY "product"."Name", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__keyword_0='?', @__keyword_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE ((instr(lower("product"."Name"), @__keyword_0) > 0) OR (@__keyword_0 = '')) OR ((instr(lower("product"."Description"), @__keyword_1) > 0) OR (@__keyword_1 = ''))
ORDER BY "product"."Name"Executed DbCommand (3ms) [Parameters=[@__keyword_0='?', @__keyword_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE ((instr(lower("product"."Name"), @__keyword_0) > 0) OR (@__keyword_0 = '')) OR ((instr(lower("product"."Description"), @__keyword_1) > 0) OR (@__keyword_1 = ''))
ORDER BY "product"."Name"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
where bool string [product].Name.ToLower().Contains(__keyword_0) || bool string [product].Description.ToLower().Contains(__keyword_1)
order by [product].Name asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
where bool string [product].Name.ToLower().Contains(__keyword_0) || bool string [product].Description.ToLower().Contains(__keyword_1)
order by [product].Name asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                WHERE ((instr(lower("product"."Name"), @__keyword_0) > 0) OR (@__keyword_0 = '')) OR ((instr(lower("product"."Description"), @__keyword_1) > 0) OR (@__keyword_1 = ''))
                ORDER BY "product"."Name", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__keyword_0='?', @__keyword_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE ((instr(lower("product"."Name"), @__keyword_0) > 0) OR (@__keyword_0 = '')) OR ((instr(lower("product"."Description"), @__keyword_1) > 0) OR (@__keyword_1 = ''))
ORDER BY "product"."Name"Executed DbCommand (1ms) [Parameters=[@__keyword_0='?', @__keyword_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE ((instr(lower("product"."Name"), @__keyword_0) > 0) OR (@__keyword_0 = '')) OR ((instr(lower("product"."Description"), @__keyword_1) > 0) OR (@__keyword_1 = ''))
ORDER BY "product"."Name"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
where bool string [product].Name.ToLower().Contains(__keyword_0) || bool string [product].Description.ToLower().Contains(__keyword_1)
order by [product].Price desc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
where bool string [product].Name.ToLower().Contains(__keyword_0) || bool string [product].Description.ToLower().Contains(__keyword_1)
order by [product].Price desc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                WHERE ((instr(lower("product"."Name"), @__keyword_0) > 0) OR (@__keyword_0 = '')) OR ((instr(lower("product"."Description"), @__keyword_1) > 0) OR (@__keyword_1 = ''))
                ORDER BY "product"."Price" DESC, 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__keyword_0='?', @__keyword_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE ((instr(lower("product"."Name"), @__keyword_0) > 0) OR (@__keyword_0 = '')) OR ((instr(lower("product"."Description"), @__keyword_1) > 0) OR (@__keyword_1 = ''))
ORDER BY "product"."Price" DESCExecuted DbCommand (1ms) [Parameters=[@__keyword_0='?', @__keyword_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE ((instr(lower("product"."Name"), @__keyword_0) > 0) OR (@__keyword_0 = '')) OR ((instr(lower("product"."Description"), @__keyword_1) > 0) OR (@__keyword_1 = ''))
ORDER BY "product"."Price" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'Optimized query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Customer> _InterceptExceptions(
    source: IEnumerable<Customer> _TrackEntities(
        results: IEnumerable<Customer> _ToSequence(Customer FirstOrDefault(IEnumerable<Customer> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
                        FROM "Customers" AS "customer"
                        WHERE "customer"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Customer>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Customer }, 
        entityAccessors: List<Func<Customer, object>> 
        { 
            Func<Customer, Customer>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'Optimized query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Customer> _InterceptExceptions(
    source: IEnumerable<Customer> _TrackEntities(
        results: IEnumerable<Customer> _ToSequence(Customer FirstOrDefault(IEnumerable<Customer> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
                        FROM "Customers" AS "customer"
                        WHERE "customer"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Customer>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Customer }, 
        entityAccessors: List<Func<Customer, object>> 
        { 
            Func<Customer, Customer>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1Executed DbCommand (3ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Email == __email_0 && [customer].Password == __password_1
select [customer]).Count()'Optimized query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Email == __email_0 && [customer].Password == __password_1
select [customer]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "Customers" AS "customer"
                    WHERE ("customer"."Email" = @__email_0) AND ("customer"."Password" = @__password_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__email_0='?', @__password_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "Customers" AS "customer"
WHERE ("customer"."Email" = @__email_0) AND ("customer"."Password" = @__password_1)Executed DbCommand (1ms) [Parameters=[@__email_0='?', @__password_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "Customers" AS "customer"
WHERE ("customer"."Email" = @__email_0) AND ("customer"."Password" = @__password_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Customers" SET "Password" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (9ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Customers" SET "Password" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'Optimized query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Customer> _InterceptExceptions(
    source: IEnumerable<Customer> _TrackEntities(
        results: IEnumerable<Customer> _ToSequence(Customer FirstOrDefault(IEnumerable<Customer> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
                        FROM "Customers" AS "customer"
                        WHERE "customer"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Customer>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Customer }, 
        entityAccessors: List<Func<Customer, object>> 
        { 
            Func<Customer, Customer>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'Optimized query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Customer> _InterceptExceptions(
    source: IEnumerable<Customer> _TrackEntities(
        results: IEnumerable<Customer> _ToSequence(Customer FirstOrDefault(IEnumerable<Customer> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
                        FROM "Customers" AS "customer"
                        WHERE "customer"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Customer>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Customer }, 
        entityAccessors: List<Func<Customer, object>> 
        { 
            Func<Customer, Customer>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1Executed DbCommand (3ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'Optimized query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Customer> _InterceptExceptions(
    source: IEnumerable<Customer> _TrackEntities(
        results: IEnumerable<Customer> _ToSequence(Customer FirstOrDefault(IEnumerable<Customer> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
                        FROM "Customers" AS "customer"
                        WHERE "customer"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Customer>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Customer }, 
        entityAccessors: List<Func<Customer, object>> 
        { 
            Func<Customer, Customer>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'Optimized query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Customer> _InterceptExceptions(
    source: IEnumerable<Customer> _TrackEntities(
        results: IEnumerable<Customer> _ToSequence(Customer FirstOrDefault(IEnumerable<Customer> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
                        FROM "Customers" AS "customer"
                        WHERE "customer"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Customer>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Customer }, 
        entityAccessors: List<Func<Customer, object>> 
        { 
            Func<Customer, Customer>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'Optimized query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Customer> _InterceptExceptions(
    source: IEnumerable<Customer> _TrackEntities(
        results: IEnumerable<Customer> _ToSequence(Customer FirstOrDefault(IEnumerable<Customer> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
                        FROM "Customers" AS "customer"
                        WHERE "customer"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Customer>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Customer }, 
        entityAccessors: List<Func<Customer, object>> 
        { 
            Func<Customer, Customer>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1Executed DbCommand (3ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Customers" SET "Name" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (9ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Customers" SET "Name" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'Optimized query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Customer> _InterceptExceptions(
    source: IEnumerable<Customer> _TrackEntities(
        results: IEnumerable<Customer> _ToSequence(Customer FirstOrDefault(IEnumerable<Customer> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
                        FROM "Customers" AS "customer"
                        WHERE "customer"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Customer>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Customer }, 
        entityAccessors: List<Func<Customer, object>> 
        { 
            Func<Customer, Customer>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Email == __email_0 && [customer].Password == __password_1
select [customer]).Count()'Optimized query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Email == __email_0 && [customer].Password == __password_1
select [customer]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "Customers" AS "customer"
                    WHERE ("customer"."Email" = @__email_0) AND ("customer"."Password" = @__password_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__email_0='?', @__password_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "Customers" AS "customer"
WHERE ("customer"."Email" = @__email_0) AND ("customer"."Password" = @__password_1)Executed DbCommand (1ms) [Parameters=[@__email_0='?', @__password_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "Customers" AS "customer"
WHERE ("customer"."Email" = @__email_0) AND ("customer"."Password" = @__password_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Email == __email_0
select [customer].Id).FirstOrDefault()'Optimized query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Email == __email_0
select [customer].Id).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "customer"."Id"
                    FROM "Customers" AS "customer"
                    WHERE "customer"."Email" = @__email_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__email_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id"
FROM "Customers" AS "customer"
WHERE "customer"."Email" = @__email_0
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__email_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id"
FROM "Customers" AS "customer"
WHERE "customer"."Email" = @__email_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'Optimized query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Customer> _InterceptExceptions(
    source: IEnumerable<Customer> _TrackEntities(
        results: IEnumerable<Customer> _ToSequence(Customer FirstOrDefault(IEnumerable<Customer> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
                        FROM "Customers" AS "customer"
                        WHERE "customer"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Customer>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Customer }, 
        entityAccessors: List<Func<Customer, object>> 
        { 
            Func<Customer, Customer>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "ShoppingCart" AS "sc"
                    WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (8ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p0='?', @p1='?', @p2='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO "ShoppingCart" ("CustomerId", "ProductId", "Amount")
VALUES (@p0, @p1, @p2);Executed DbCommand (1ms) [Parameters=[@p0='?', @p1='?', @p2='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO "ShoppingCart" ("CustomerId", "ProductId", "Amount")
VALUES (@p0, @p1, @p2);A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].Name asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].Name asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."Name", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."Name"Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."Name"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "ShoppingCart" AS "sc"
                    WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (2ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p0='?', @p1='?', @p2='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO "ShoppingCart" ("CustomerId", "ProductId", "Amount")
VALUES (@p0, @p1, @p2);Executed DbCommand (1ms) [Parameters=[@p0='?', @p1='?', @p2='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO "ShoppingCart" ("CustomerId", "ProductId", "Amount")
VALUES (@p0, @p1, @p2);A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].Name asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].Name asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."Name", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."Name"Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."Name"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "ShoppingCart" AS "sc"
                    WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (10ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p0='?', @p1='?', @p2='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO "ShoppingCart" ("CustomerId", "ProductId", "Amount")
VALUES (@p0, @p1, @p2);Executed DbCommand (0ms) [Parameters=[@p0='?', @p1='?', @p2='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO "ShoppingCart" ("CustomerId", "ProductId", "Amount")
VALUES (@p0, @p1, @p2);A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (2ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].Name asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].Name asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."Name", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."Name"Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."Name"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (3ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "ShoppingCart" AS "sc"
                    WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (10ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p0='?', @p1='?', @p2='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO "ShoppingCart" ("CustomerId", "ProductId", "Amount")
VALUES (@p0, @p1, @p2);Executed DbCommand (0ms) [Parameters=[@p0='?', @p1='?', @p2='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO "ShoppingCart" ("CustomerId", "ProductId", "Amount")
VALUES (@p0, @p1, @p2);A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (3ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "ShoppingCart" AS "sc"
                    WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<ShoppingCart> _InterceptExceptions(
    source: IEnumerable<ShoppingCart> _TrackEntities(
        results: IEnumerable<ShoppingCart> _ToSequence(ShoppingCart FirstOrDefault(IEnumerable<ShoppingCart> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
                        FROM "ShoppingCart" AS "sc"
                        WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<ShoppingCart>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: ShoppingCart }, 
        entityAccessors: List<Func<ShoppingCart, object>> 
        { 
            Func<ShoppingCart, ShoppingCart>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (9ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();Executed DbCommand (0ms) [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "ShoppingCart" AS "sc"
                    WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<ShoppingCart> _InterceptExceptions(
    source: IEnumerable<ShoppingCart> _TrackEntities(
        results: IEnumerable<ShoppingCart> _ToSequence(ShoppingCart FirstOrDefault(IEnumerable<ShoppingCart> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
                        FROM "ShoppingCart" AS "sc"
                        WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<ShoppingCart>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: ShoppingCart }, 
        entityAccessors: List<Func<ShoppingCart, object>> 
        { 
            Func<ShoppingCart, ShoppingCart>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (9ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();Executed DbCommand (1ms) [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (2ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "ShoppingCart" AS "sc"
                    WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)Executed DbCommand (2ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<ShoppingCart> _InterceptExceptions(
    source: IEnumerable<ShoppingCart> _TrackEntities(
        results: IEnumerable<ShoppingCart> _ToSequence(ShoppingCart FirstOrDefault(IEnumerable<ShoppingCart> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
                        FROM "ShoppingCart" AS "sc"
                        WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<ShoppingCart>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: ShoppingCart }, 
        entityAccessors: List<Func<ShoppingCart, object>> 
        { 
            Func<ShoppingCart, ShoppingCart>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (4ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();Executed DbCommand (1ms) [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (3ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "ShoppingCart" AS "sc"
                    WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)Executed DbCommand (4ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<ShoppingCart> _InterceptExceptions(
    source: IEnumerable<ShoppingCart> _TrackEntities(
        results: IEnumerable<ShoppingCart> _ToSequence(ShoppingCart FirstOrDefault(IEnumerable<ShoppingCart> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
                        FROM "ShoppingCart" AS "sc"
                        WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<ShoppingCart>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: ShoppingCart }, 
        entityAccessors: List<Func<ShoppingCart, object>> 
        { 
            Func<ShoppingCart, ShoppingCart>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1Executed DbCommand (4ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (3ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (13ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();Executed DbCommand (5ms) [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (3ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (4ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "ShoppingCart" AS "sc"
                    WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<ShoppingCart> _InterceptExceptions(
    source: IEnumerable<ShoppingCart> _TrackEntities(
        results: IEnumerable<ShoppingCart> _ToSequence(ShoppingCart FirstOrDefault(IEnumerable<ShoppingCart> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
                        FROM "ShoppingCart" AS "sc"
                        WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<ShoppingCart>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: ShoppingCart }, 
        entityAccessors: List<Func<ShoppingCart, object>> 
        { 
            Func<ShoppingCart, ShoppingCart>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (9ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();Executed DbCommand (1ms) [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "ShoppingCart" AS "sc"
                    WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<ShoppingCart> _InterceptExceptions(
    source: IEnumerable<ShoppingCart> _TrackEntities(
        results: IEnumerable<ShoppingCart> _ToSequence(ShoppingCart FirstOrDefault(IEnumerable<ShoppingCart> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
                        FROM "ShoppingCart" AS "sc"
                        WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<ShoppingCart>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: ShoppingCart }, 
        entityAccessors: List<Func<ShoppingCart, object>> 
        { 
            Func<ShoppingCart, ShoppingCart>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (8ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();Executed DbCommand (0ms) [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (3ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "ShoppingCart" AS "sc"
                    WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)Executed DbCommand (2ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<ShoppingCart> _InterceptExceptions(
    source: IEnumerable<ShoppingCart> _TrackEntities(
        results: IEnumerable<ShoppingCart> _ToSequence(ShoppingCart FirstOrDefault(IEnumerable<ShoppingCart> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
                        FROM "ShoppingCart" AS "sc"
                        WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<ShoppingCart>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: ShoppingCart }, 
        entityAccessors: List<Func<ShoppingCart, object>> 
        { 
            Func<ShoppingCart, ShoppingCart>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (10ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();Executed DbCommand (2ms) [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (2ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (2ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "ShoppingCart" AS "sc"
                    WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<ShoppingCart> _InterceptExceptions(
    source: IEnumerable<ShoppingCart> _TrackEntities(
        results: IEnumerable<ShoppingCart> _ToSequence(ShoppingCart FirstOrDefault(IEnumerable<ShoppingCart> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
                        FROM "ShoppingCart" AS "sc"
                        WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<ShoppingCart>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: ShoppingCart }, 
        entityAccessors: List<Func<ShoppingCart, object>> 
        { 
            Func<ShoppingCart, ShoppingCart>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (9ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();Executed DbCommand (1ms) [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "ShoppingCart" AS "sc"
                    WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<ShoppingCart> _InterceptExceptions(
    source: IEnumerable<ShoppingCart> _TrackEntities(
        results: IEnumerable<ShoppingCart> _ToSequence(ShoppingCart FirstOrDefault(IEnumerable<ShoppingCart> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
                        FROM "ShoppingCart" AS "sc"
                        WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<ShoppingCart>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: ShoppingCart }, 
        entityAccessors: List<Func<ShoppingCart, object>> 
        { 
            Func<ShoppingCart, ShoppingCart>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (8ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();Executed DbCommand (1ms) [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "ShoppingCart" AS "sc"
                    WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<ShoppingCart> _InterceptExceptions(
    source: IEnumerable<ShoppingCart> _TrackEntities(
        results: IEnumerable<ShoppingCart> _ToSequence(ShoppingCart FirstOrDefault(IEnumerable<ShoppingCart> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
                        FROM "ShoppingCart" AS "sc"
                        WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<ShoppingCart>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: ShoppingCart }, 
        entityAccessors: List<Func<ShoppingCart, object>> 
        { 
            Func<ShoppingCart, ShoppingCart>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (8ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();Executed DbCommand (0ms) [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "ShoppingCart" AS "sc"
                    WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<ShoppingCart> _InterceptExceptions(
    source: IEnumerable<ShoppingCart> _TrackEntities(
        results: IEnumerable<ShoppingCart> _ToSequence(ShoppingCart FirstOrDefault(IEnumerable<ShoppingCart> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
                        FROM "ShoppingCart" AS "sc"
                        WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<ShoppingCart>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: ShoppingCart }, 
        entityAccessors: List<Func<ShoppingCart, object>> 
        { 
            Func<ShoppingCart, ShoppingCart>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (9ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();Executed DbCommand (2ms) [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (5ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (6ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "ShoppingCart" AS "sc"
                    WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<ShoppingCart> _InterceptExceptions(
    source: IEnumerable<ShoppingCart> _TrackEntities(
        results: IEnumerable<ShoppingCart> _ToSequence(ShoppingCart FirstOrDefault(IEnumerable<ShoppingCart> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
                        FROM "ShoppingCart" AS "sc"
                        WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<ShoppingCart>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: ShoppingCart }, 
        entityAccessors: List<Func<ShoppingCart, object>> 
        { 
            Func<ShoppingCart, ShoppingCart>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (2ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();Executed DbCommand (0ms) [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (3ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "ShoppingCart" AS "sc"
                    WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)Executed DbCommand (2ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<ShoppingCart> _InterceptExceptions(
    source: IEnumerable<ShoppingCart> _TrackEntities(
        results: IEnumerable<ShoppingCart> _ToSequence(ShoppingCart FirstOrDefault(IEnumerable<ShoppingCart> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
                        FROM "ShoppingCart" AS "sc"
                        WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<ShoppingCart>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: ShoppingCart }, 
        entityAccessors: List<Func<ShoppingCart, object>> 
        { 
            Func<ShoppingCart, ShoppingCart>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (9ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();Executed DbCommand (2ms) [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "ShoppingCart" AS "sc"
                    WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<ShoppingCart> _InterceptExceptions(
    source: IEnumerable<ShoppingCart> _TrackEntities(
        results: IEnumerable<ShoppingCart> _ToSequence(ShoppingCart FirstOrDefault(IEnumerable<ShoppingCart> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
                        FROM "ShoppingCart" AS "sc"
                        WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<ShoppingCart>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: ShoppingCart }, 
        entityAccessors: List<Func<ShoppingCart, object>> 
        { 
            Func<ShoppingCart, ShoppingCart>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (9ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();Executed DbCommand (0ms) [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "ShoppingCart" AS "sc"
                    WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<ShoppingCart> _InterceptExceptions(
    source: IEnumerable<ShoppingCart> _TrackEntities(
        results: IEnumerable<ShoppingCart> _ToSequence(ShoppingCart FirstOrDefault(IEnumerable<ShoppingCart> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
                        FROM "ShoppingCart" AS "sc"
                        WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<ShoppingCart>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: ShoppingCart }, 
        entityAccessors: List<Func<ShoppingCart, object>> 
        { 
            Func<ShoppingCart, ShoppingCart>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (8ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();Executed DbCommand (0ms) [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "ShoppingCart" AS "sc"
                    WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)Executed DbCommand (2ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<ShoppingCart> _InterceptExceptions(
    source: IEnumerable<ShoppingCart> _TrackEntities(
        results: IEnumerable<ShoppingCart> _ToSequence(ShoppingCart FirstOrDefault(IEnumerable<ShoppingCart> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
                        FROM "ShoppingCart" AS "sc"
                        WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<ShoppingCart>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: ShoppingCart }, 
        entityAccessors: List<Func<ShoppingCart, object>> 
        { 
            Func<ShoppingCart, ShoppingCart>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (3ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (8ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();Executed DbCommand (1ms) [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "ShoppingCart" AS "sc"
                    WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<ShoppingCart> _InterceptExceptions(
    source: IEnumerable<ShoppingCart> _TrackEntities(
        results: IEnumerable<ShoppingCart> _ToSequence(ShoppingCart FirstOrDefault(IEnumerable<ShoppingCart> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
                        FROM "ShoppingCart" AS "sc"
                        WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<ShoppingCart>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: ShoppingCart }, 
        entityAccessors: List<Func<ShoppingCart, object>> 
        { 
            Func<ShoppingCart, ShoppingCart>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1Executed DbCommand (5ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (9ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();Executed DbCommand (1ms) [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (10ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (2ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<ShoppingCart> _InterceptExceptions(
    source: IEnumerable<ShoppingCart> _TrackEntities(
        results: IEnumerable<ShoppingCart> _ToSequence(ShoppingCart FirstOrDefault(IEnumerable<ShoppingCart> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
                        FROM "ShoppingCart" AS "sc"
                        WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<ShoppingCart>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: ShoppingCart }, 
        entityAccessors: List<Func<ShoppingCart, object>> 
        { 
            Func<ShoppingCart, ShoppingCart>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (9ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p0='?', @p1='?'], CommandType='Text', CommandTimeout='30']
DELETE FROM "ShoppingCart"
WHERE "CustomerId" = @p0 AND "ProductId" = @p1;
SELECT changes();Executed DbCommand (1ms) [Parameters=[@p0='?', @p1='?'], CommandType='Text', CommandTimeout='30']
DELETE FROM "ShoppingCart"
WHERE "CustomerId" = @p0 AND "ProductId" = @p1;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0
select [sc]'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0
select [sc]'(QueryContext queryContext) => IEnumerable<ShoppingCart> _InterceptExceptions(
    source: IEnumerable<ShoppingCart> _TrackEntities(
        results: IEnumerable<ShoppingCart> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
                FROM "ShoppingCart" AS "sc"
                WHERE "sc"."CustomerId" = @__customerId_0, 
            shaper: UnbufferedEntityShaper<ShoppingCart>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: ShoppingCart }, 
        entityAccessors: List<Func<ShoppingCart, object>> 
        { 
            Func<ShoppingCart, ShoppingCart>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE "sc"."CustomerId" = @__customerId_0Executed DbCommand (2ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE "sc"."CustomerId" = @__customerId_0Compiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (8ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (0ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (0ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p0='?', @p1='?'], CommandType='Text', CommandTimeout='30']
DELETE FROM "ShoppingCart"
WHERE "CustomerId" = @p0 AND "ProductId" = @p1;
SELECT changes();Executed DbCommand (1ms) [Parameters=[@p0='?', @p1='?'], CommandType='Text', CommandTimeout='30']
DELETE FROM "ShoppingCart"
WHERE "CustomerId" = @p0 AND "ProductId" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p0='?', @p1='?'], CommandType='Text', CommandTimeout='30']
DELETE FROM "ShoppingCart"
WHERE "CustomerId" = @p0 AND "ProductId" = @p1;
SELECT changes();Executed DbCommand (0ms) [Parameters=[@p0='?', @p1='?'], CommandType='Text', CommandTimeout='30']
DELETE FROM "ShoppingCart"
WHERE "CustomerId" = @p0 AND "ProductId" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p0='?', @p1='?'], CommandType='Text', CommandTimeout='30']
DELETE FROM "ShoppingCart"
WHERE "CustomerId" = @p0 AND "ProductId" = @p1;
SELECT changes();Executed DbCommand (1ms) [Parameters=[@p0='?', @p1='?'], CommandType='Text', CommandTimeout='30']
DELETE FROM "ShoppingCart"
WHERE "CustomerId" = @p0 AND "ProductId" = @p1;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].Name asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].Name asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."Name", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."Name"Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."Name"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Email == __email_0 && [customer].Password == __password_1
select [customer]).Count()'Optimized query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Email == __email_0 && [customer].Password == __password_1
select [customer]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "Customers" AS "customer"
                    WHERE ("customer"."Email" = @__email_0) AND ("customer"."Password" = @__password_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__email_0='?', @__password_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "Customers" AS "customer"
WHERE ("customer"."Email" = @__email_0) AND ("customer"."Password" = @__password_1)Executed DbCommand (3ms) [Parameters=[@__email_0='?', @__password_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "Customers" AS "customer"
WHERE ("customer"."Email" = @__email_0) AND ("customer"."Password" = @__password_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Email == __email_0
select [customer].Id).FirstOrDefault()'Optimized query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Email == __email_0
select [customer].Id).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "customer"."Id"
                    FROM "Customers" AS "customer"
                    WHERE "customer"."Email" = @__email_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__email_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id"
FROM "Customers" AS "customer"
WHERE "customer"."Email" = @__email_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__email_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id"
FROM "Customers" AS "customer"
WHERE "customer"."Email" = @__email_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'Optimized query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Customer> _InterceptExceptions(
    source: IEnumerable<Customer> _TrackEntities(
        results: IEnumerable<Customer> _ToSequence(Customer FirstOrDefault(IEnumerable<Customer> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
                        FROM "Customers" AS "customer"
                        WHERE "customer"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Customer>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Customer }, 
        entityAccessors: List<Func<Customer, object>> 
        { 
            Func<Customer, Customer>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
where bool string [product].Name.ToLower().Contains(__keyword_0) || bool string [product].Description.ToLower().Contains(__keyword_1)
order by [product].Name asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
where bool string [product].Name.ToLower().Contains(__keyword_0) || bool string [product].Description.ToLower().Contains(__keyword_1)
order by [product].Name asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                WHERE ((instr(lower("product"."Name"), @__keyword_0) > 0) OR (@__keyword_0 = '')) OR ((instr(lower("product"."Description"), @__keyword_1) > 0) OR (@__keyword_1 = ''))
                ORDER BY "product"."Name", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__keyword_0='?', @__keyword_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE ((instr(lower("product"."Name"), @__keyword_0) > 0) OR (@__keyword_0 = '')) OR ((instr(lower("product"."Description"), @__keyword_1) > 0) OR (@__keyword_1 = ''))
ORDER BY "product"."Name"Executed DbCommand (1ms) [Parameters=[@__keyword_0='?', @__keyword_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE ((instr(lower("product"."Name"), @__keyword_0) > 0) OR (@__keyword_0 = '')) OR ((instr(lower("product"."Description"), @__keyword_1) > 0) OR (@__keyword_1 = ''))
ORDER BY "product"."Name"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (4ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "ShoppingCart" AS "sc"
                    WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<ShoppingCart> _InterceptExceptions(
    source: IEnumerable<ShoppingCart> _TrackEntities(
        results: IEnumerable<ShoppingCart> _ToSequence(ShoppingCart FirstOrDefault(IEnumerable<ShoppingCart> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
                        FROM "ShoppingCart" AS "sc"
                        WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<ShoppingCart>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: ShoppingCart }, 
        entityAccessors: List<Func<ShoppingCart, object>> 
        { 
            Func<ShoppingCart, ShoppingCart>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (9ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();Executed DbCommand (1ms) [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].Name asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].Name asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."Name", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."Name"Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."Name"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "ShoppingCart" AS "sc"
                    WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (9ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p0='?', @p1='?', @p2='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO "ShoppingCart" ("CustomerId", "ProductId", "Amount")
VALUES (@p0, @p1, @p2);Executed DbCommand (1ms) [Parameters=[@p0='?', @p1='?', @p2='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO "ShoppingCart" ("CustomerId", "ProductId", "Amount")
VALUES (@p0, @p1, @p2);A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (2ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].Name asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].Name asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."Name", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."Name"Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."Name"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].Price desc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].Price desc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."Price" DESC, 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."Price" DESCExecuted DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."Price" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (4ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "ShoppingCart" AS "sc"
                    WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'Optimized query model: 
'(from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == __productId_1
select [sc]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<ShoppingCart> _InterceptExceptions(
    source: IEnumerable<ShoppingCart> _TrackEntities(
        results: IEnumerable<ShoppingCart> _ToSequence(ShoppingCart FirstOrDefault(IEnumerable<ShoppingCart> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
                        FROM "ShoppingCart" AS "sc"
                        WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<ShoppingCart>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: ShoppingCart }, 
        entityAccessors: List<Func<ShoppingCart, object>> 
        { 
            Func<ShoppingCart, ShoppingCart>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__customerId_0='?', @__productId_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = @__productId_1)
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (9ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();Executed DbCommand (1ms) [Parameters=[@p1='?', @p2='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "ShoppingCart" SET "Amount" = @p0
WHERE "CustomerId" = @p1 AND "ProductId" = @p2;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0
select [sc]'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
where [sc].CustomerId == __customerId_0
select [sc]'(QueryContext queryContext) => IEnumerable<ShoppingCart> _InterceptExceptions(
    source: IEnumerable<ShoppingCart> _TrackEntities(
        results: IEnumerable<ShoppingCart> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
                FROM "ShoppingCart" AS "sc"
                WHERE "sc"."CustomerId" = @__customerId_0, 
            shaper: UnbufferedEntityShaper<ShoppingCart>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: ShoppingCart }, 
        entityAccessors: List<Func<ShoppingCart, object>> 
        { 
            Func<ShoppingCart, ShoppingCart>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE "sc"."CustomerId" = @__customerId_0Executed DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."CustomerId", "sc"."ProductId", "sc"."Amount"
FROM "ShoppingCart" AS "sc"
WHERE "sc"."CustomerId" = @__customerId_0Compiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (8ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (1ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (0ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Amount" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p0='?', @p1='?'], CommandType='Text', CommandTimeout='30']
DELETE FROM "ShoppingCart"
WHERE "CustomerId" = @p0 AND "ProductId" = @p1;
SELECT changes();Executed DbCommand (1ms) [Parameters=[@p0='?', @p1='?'], CommandType='Text', CommandTimeout='30']
DELETE FROM "ShoppingCart"
WHERE "CustomerId" = @p0 AND "ProductId" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p0='?', @p1='?'], CommandType='Text', CommandTimeout='30']
DELETE FROM "ShoppingCart"
WHERE "CustomerId" = @p0 AND "ProductId" = @p1;
SELECT changes();Executed DbCommand (0ms) [Parameters=[@p0='?', @p1='?'], CommandType='Text', CommandTimeout='30']
DELETE FROM "ShoppingCart"
WHERE "CustomerId" = @p0 AND "ProductId" = @p1;
SELECT changes();A data reader was disposed.Executing DbCommand [Parameters=[@p0='?', @p1='?'], CommandType='Text', CommandTimeout='30']
DELETE FROM "ShoppingCart"
WHERE "CustomerId" = @p0 AND "ProductId" = @p1;
SELECT changes();Executed DbCommand (0ms) [Parameters=[@p0='?', @p1='?'], CommandType='Text', CommandTimeout='30']
DELETE FROM "ShoppingCart"
WHERE "CustomerId" = @p0 AND "ProductId" = @p1;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
select new <>f__AnonymousType2<double>([p].Price * (double)[sc].Amount)'(QueryContext queryContext) => IEnumerable<<>f__AnonymousType2<double>> _InterceptExceptions(
    source: IEnumerable<<>f__AnonymousType2<double>> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "p"."Price" * "sc"."Amount" AS "Price"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id"), 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, <>f__AnonymousType2<double>>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")Executed DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Price" * "sc"."Amount" AS "Price"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'Optimized query model: 
'from ShoppingCart sc in DbSet<ShoppingCart>
from Product p in DbSet<Product>
where [sc].CustomerId == __customerId_0 && [sc].ProductId == [p].Id
order by [p].Name desc
select new ShoppingCartView{ 
    Id = [sc].ProductId, 
    ProductName = [p].Name, 
    Amount = [sc].Amount, 
    Price = string FormatPrice([p].Price), 
    TotalPrice = string FormatPrice([p].Price * (double)[sc].Amount) 
}
'(QueryContext queryContext) => IEnumerable<ShoppingCartView> _InterceptExceptions(
    source: IEnumerable<ShoppingCartView> _ShapedQuery(
        queryContext: queryContext, 
        shaperCommandContext: SelectExpression: 
            SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
            FROM "ShoppingCart" AS "sc"
            CROSS JOIN "Products" AS "p"
            WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
            ORDER BY "ProductName" DESC, 
        shaper: TypedProjectionShaper<TypedCompositeShaper<ValueBufferShaper, ValueBuffer, ValueBufferShaper, ValueBuffer, TransparentIdentifier<ValueBuffer, ValueBuffer>>, TransparentIdentifier<ValueBuffer, ValueBuffer>, ShoppingCartView>), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCExecuted DbCommand (1ms) [Parameters=[@__customerId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "sc"."ProductId" AS "Id", "p"."Name" AS "ProductName", "sc"."Amount", "p"."Price", "p"."Price" * "sc"."Amount"
FROM "ShoppingCart" AS "sc"
CROSS JOIN "Products" AS "p"
WHERE ("sc"."CustomerId" = @__customerId_0) AND ("sc"."ProductId" = "p"."Id")
ORDER BY "ProductName" DESCA data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'Optimized query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Customer> _InterceptExceptions(
    source: IEnumerable<Customer> _TrackEntities(
        results: IEnumerable<Customer> _ToSequence(Customer FirstOrDefault(IEnumerable<Customer> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
                        FROM "Customers" AS "customer"
                        WHERE "customer"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Customer>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Customer }, 
        entityAccessors: List<Func<Customer, object>> 
        { 
            Func<Customer, Customer>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1Executed DbCommand (3ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'Optimized query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Customer> _InterceptExceptions(
    source: IEnumerable<Customer> _TrackEntities(
        results: IEnumerable<Customer> _ToSequence(Customer FirstOrDefault(IEnumerable<Customer> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
                        FROM "Customers" AS "customer"
                        WHERE "customer"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Customer>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Customer }, 
        entityAccessors: List<Func<Customer, object>> 
        { 
            Func<Customer, Customer>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1Executed DbCommand (3ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'Optimized query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Customer> _InterceptExceptions(
    source: IEnumerable<Customer> _TrackEntities(
        results: IEnumerable<Customer> _ToSequence(Customer FirstOrDefault(IEnumerable<Customer> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
                        FROM "Customers" AS "customer"
                        WHERE "customer"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Customer>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Customer }, 
        entityAccessors: List<Func<Customer, object>> 
        { 
            Func<Customer, Customer>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Customers" SET "Street" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (9ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Customers" SET "Street" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'Optimized query model: 
'(from Customer customer in DbSet<Customer>
where [customer].Id == __id_0
select [customer]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Customer> _InterceptExceptions(
    source: IEnumerable<Customer> _TrackEntities(
        results: IEnumerable<Customer> _ToSequence(Customer FirstOrDefault(IEnumerable<Customer> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
                        FROM "Customers" AS "customer"
                        WHERE "customer"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Customer>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Customer }, 
        entityAccessors: List<Func<Customer, object>> 
        { 
            Func<Customer, Customer>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "customer"."Id", "customer"."City", "customer"."Email", "customer"."Gender", "customer"."Name", "customer"."Password", "customer"."PostalCode", "customer"."RegistrationDate", "customer"."Street", "customer"."Surname"
FROM "Customers" AS "customer"
WHERE "customer"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Administrator <generated>_1 in DbSet<Administrator>
select [<generated>_1]).Count()'Optimized query model: 
'(from Administrator <generated>_1 in DbSet<Administrator>
select [<generated>_1]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "Administrators" AS "a"), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "Administrators" AS "a"Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "Administrators" AS "a"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Administrator admin in DbSet<Administrator>
where [admin].UserName == __username_0 && [admin].Password == __password_1
select [admin]).Count()'Optimized query model: 
'(from Administrator admin in DbSet<Administrator>
where [admin].UserName == __username_0 && [admin].Password == __password_1
select [admin]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "Administrators" AS "admin"
                    WHERE ("admin"."UserName" = @__username_0) AND ("admin"."Password" = @__password_1)), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__username_0='?', @__password_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "Administrators" AS "admin"
WHERE ("admin"."UserName" = @__username_0) AND ("admin"."Password" = @__password_1)Executed DbCommand (1ms) [Parameters=[@__username_0='?', @__password_1='?'], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "Administrators" AS "admin"
WHERE ("admin"."UserName" = @__username_0) AND ("admin"."Password" = @__password_1)A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
where bool string [product].Name.ToLower().Contains(__keyword_0) || bool string [product].Description.ToLower().Contains(__keyword_1)
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
where bool string [product].Name.ToLower().Contains(__keyword_0) || bool string [product].Description.ToLower().Contains(__keyword_1)
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                WHERE ((instr(lower("product"."Name"), @__keyword_0) > 0) OR (@__keyword_0 = '')) OR ((instr(lower("product"."Description"), @__keyword_1) > 0) OR (@__keyword_1 = ''))
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__keyword_0='?', @__keyword_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE ((instr(lower("product"."Name"), @__keyword_0) > 0) OR (@__keyword_0 = '')) OR ((instr(lower("product"."Description"), @__keyword_1) > 0) OR (@__keyword_1 = ''))
ORDER BY "product"."DateAdded"Executed DbCommand (1ms) [Parameters=[@__keyword_0='?', @__keyword_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE ((instr(lower("product"."Name"), @__keyword_0) > 0) OR (@__keyword_0 = '')) OR ((instr(lower("product"."Description"), @__keyword_1) > 0) OR (@__keyword_1 = ''))
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
where bool string [product].Name.ToLower().Contains(__keyword_0) || bool string [product].Description.ToLower().Contains(__keyword_1)
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
where bool string [product].Name.ToLower().Contains(__keyword_0) || bool string [product].Description.ToLower().Contains(__keyword_1)
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                WHERE ((instr(lower("product"."Name"), @__keyword_0) > 0) OR (@__keyword_0 = '')) OR ((instr(lower("product"."Description"), @__keyword_1) > 0) OR (@__keyword_1 = ''))
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__keyword_0='?', @__keyword_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE ((instr(lower("product"."Name"), @__keyword_0) > 0) OR (@__keyword_0 = '')) OR ((instr(lower("product"."Description"), @__keyword_1) > 0) OR (@__keyword_1 = ''))
ORDER BY "product"."DateAdded"Executed DbCommand (2ms) [Parameters=[@__keyword_0='?', @__keyword_1='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE ((instr(lower("product"."Name"), @__keyword_0) > 0) OR (@__keyword_0 = '')) OR ((instr(lower("product"."Description"), @__keyword_1) > 0) OR (@__keyword_1 = ''))
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Price" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (9ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Price" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneOpening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?', @p8='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO "Products" ("Amount", "Brand", "Category", "DateAdded", "Description", "Extra", "Gender", "Name", "Price")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
SELECT "Id"
FROM "Products"
WHERE changes() = 1 AND "Id" = last_insert_rowid();Executed DbCommand (11ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?', @p8='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO "Products" ("Amount", "Brand", "Category", "DateAdded", "Description", "Extra", "Gender", "Name", "Price")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
SELECT "Id"
FROM "Products"
WHERE changes() = 1 AND "Id" = last_insert_rowid();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (3ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Description" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (10ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Description" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (3ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].Name asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].Name asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."Name", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."Name"Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."Name"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (3ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.More than twenty 'IServiceProvider' instances have been created for internal use by Entity Framework. Consider reviewing calls on 'DbContextOptionsBuilder' that may require new service providers to be built.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneOpening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?', @p8='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO "Products" ("Amount", "Brand", "Category", "DateAdded", "Description", "Extra", "Gender", "Name", "Price")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
SELECT "Id"
FROM "Products"
WHERE changes() = 1 AND "Id" = last_insert_rowid();Executed DbCommand (10ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?', @p8='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO "Products" ("Amount", "Brand", "Category", "DateAdded", "Description", "Extra", "Gender", "Name", "Price")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
SELECT "Id"
FROM "Products"
WHERE changes() = 1 AND "Id" = last_insert_rowid();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Compiling query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'Optimized query model: 
'(from Product p in DbSet<Product>
where [p].Id == __productId_0
select [p].Amount).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int FirstOrDefault(IEnumerable<int> _ShapedQuery(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT "p"."Amount"
                    FROM "Products" AS "p"
                    WHERE "p"."Id" = @__productId_0
                    LIMIT 1, 
                shaper: TypedProjectionShaper<ValueBufferShaper, ValueBuffer, int>))), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__productId_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "p"."Amount"
FROM "Products" AS "p"
WHERE "p"."Id" = @__productId_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Name" = @p0
WHERE "Id" = @p1;
SELECT changes();Executed DbCommand (10ms) [Parameters=[@p1='?', @p0='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Name" = @p0
WHERE "Id" = @p1;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (10ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (2ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p2='?', @p0='?', @p1='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Description" = @p0, "Name" = @p1
WHERE "Id" = @p2;
SELECT changes();Executed DbCommand (11ms) [Parameters=[@p2='?', @p0='?', @p1='?'], CommandType='Text', CommandTimeout='30']
UPDATE "Products" SET "Description" = @p0, "Name" = @p1
WHERE "Id" = @p2;
SELECT changes();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'Optimized query model: 
'(from Product product in DbSet<Product>
where [product].Id == __id_0
select [product]).FirstOrDefault()'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ToSequence(Product FirstOrDefault(IEnumerable<Product> _ShapedQuery(
                    queryContext: queryContext, 
                    shaperCommandContext: SelectExpression: 
                        SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                        FROM "Products" AS "product"
                        WHERE "product"."Id" = @__id_0
                        LIMIT 1, 
                    shaper: UnbufferedEntityShaper<Product>))), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1Executed DbCommand (1ms) [Parameters=[@__id_0='?'], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
WHERE "product"."Id" = @__id_0
LIMIT 1A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'(from Administrator <generated>_1 in DbSet<Administrator>
select [<generated>_1]).Count()'Optimized query model: 
'(from Administrator <generated>_1 in DbSet<Administrator>
select [<generated>_1]).Count()'(QueryContext queryContext) => IEnumerable<int> _InterceptExceptions(
    source: IEnumerable<int> _ToSequence(int GetResult(
            valueBuffers: IEnumerable<ValueBuffer> _Query(
                queryContext: queryContext, 
                shaperCommandContext: SelectExpression: 
                    SELECT COUNT(*)
                    FROM "Administrators" AS "a"), 
            throwOnNullResult: False)), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "Administrators" AS "a"Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT COUNT(*)
FROM "Administrators" AS "a"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (11ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneOpening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Beginning transaction with isolation level 'Serializable'.Executing DbCommand [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?', @p8='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO "Customers" ("City", "Email", "Gender", "Name", "Password", "PostalCode", "RegistrationDate", "Street", "Surname")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
SELECT "Id"
FROM "Customers"
WHERE changes() = 1 AND "Id" = last_insert_rowid();Executed DbCommand (12ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?', @p6='?', @p7='?', @p8='?'], CommandType='Text', CommandTimeout='30']
INSERT INTO "Customers" ("City", "Email", "Gender", "Name", "Password", "PostalCode", "RegistrationDate", "Street", "Surname")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
SELECT "Id"
FROM "Customers"
WHERE changes() = 1 AND "Id" = last_insert_rowid();A data reader was disposed.Committing transaction.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.Disposing transaction.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'C:\Users\steve\Documents\GitKraken\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'D:\Hogeschool_Rotterdam\Jaar_2(2017-2018)\Project\Project56\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'D:\Hogeschool_Rotterdam\Jaar_2(2017-2018)\Project\Project56\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'D:\Hogeschool_Rotterdam\Jaar_2(2017-2018)\Project\Project56\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'D:\Hogeschool_Rotterdam\Jaar_2(2017-2018)\Project\Project56\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'D:\Hogeschool_Rotterdam\Jaar_2(2017-2018)\Project\Project56\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'D:\Hogeschool_Rotterdam\Jaar_2(2017-2018)\Project\Project56\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'D:\Hogeschool_Rotterdam\Jaar_2(2017-2018)\Project\Project56\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'D:\Hogeschool_Rotterdam\Jaar_2(2017-2018)\Project\Project56\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'D:\Hogeschool_Rotterdam\Jaar_2(2017-2018)\Project\Project56\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'D:\Hogeschool_Rotterdam\Jaar_2(2017-2018)\Project\Project56\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'D:\Hogeschool_Rotterdam\Jaar_2(2017-2018)\Project\Project56\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (19ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'D:\Hogeschool_Rotterdam\Jaar_2(2017-2018)\Project\Project56\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'D:\Hogeschool_Rotterdam\Jaar_2(2017-2018)\Project\Project56\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'D:\Hogeschool_Rotterdam\Jaar_2(2017-2018)\Project\Project56\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.An 'IServiceProvider' was created for internal use by Entity Framework.Entity Framework Core 2.0.0-rtm-26452 initialized 'WebshopContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite' with options: NoneCompiling query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'Optimized query model: 
'from Product product in DbSet<Product>
order by [product].DateAdded asc
select [product]'(QueryContext queryContext) => IEnumerable<Product> _InterceptExceptions(
    source: IEnumerable<Product> _TrackEntities(
        results: IEnumerable<Product> _ShapedQuery(
            queryContext: queryContext, 
            shaperCommandContext: SelectExpression: 
                SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
                FROM "Products" AS "product"
                ORDER BY "product"."DateAdded", 
            shaper: UnbufferedEntityShaper<Product>), 
        queryContext: queryContext, 
        entityTrackingInfos: { itemType: Product }, 
        entityAccessors: List<Func<Product, object>> 
        { 
            Func<Product, Product>, 
        }
    ), 
    contextType: Webshop.Models.WebshopContext, 
    logger: DiagnosticsLogger<Query>, 
    queryContext: queryContext)Opening connection to database 'main' on server 'WebshopContext.db'.Opened connection to database 'main' on server 'D:\Hogeschool_Rotterdam\Jaar_2(2017-2018)\Project\Project56\SquillerWebshop\WebshopContext.db'.Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
PRAGMA foreign_keys=ON;Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT "product"."Id", "product"."Amount", "product"."Brand", "product"."Category", "product"."DateAdded", "product"."Description", "product"."Extra", "product"."Gender", "product"."Name", "product"."Price"
FROM "Products" AS "product"
ORDER BY "product"."DateAdded"A data reader was disposed.Closing connection to database 'main' on server 'D:\Hogeschool_Rotterdam\Jaar_2(2017-2018)\Project\Project56\SquillerWebshop\WebshopContext.db'.Closed connection to database 'main' on server 'WebshopContext.db'.